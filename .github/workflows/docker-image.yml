name: Docker Image CI

on:
  # schedule:
  #   - cron: "0 10 * * *"
  push:
    branches:
      - "**"
    tags:
      - "v*.*.*"
  pull_request:

jobs:
  docker:
    runs-on: ubuntu-latest
    steps:
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          # list of Docker images to use as base name for tags
          images: |
            ${{ github.repository }}
          # generate Docker tags based on the following events/attributes
          tags: |
            type=schedule
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=sha

      - name: Login to Docker Hub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      #       - name: Login to GHCR
      #         if: github.event_name != 'pull_request'
      #         uses: docker/login-action@v3
      #         with:
      #           registry: ghcr.io
      #           username: ${{ github.repository_owner }}
      #           password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  deploy:
    runs-on: ubuntu-latest
    needs:
      - docker
    steps:
      - name: deploying
        uses: appleboy/ssh-action@v1
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          password: fart
          key: ${{ secrets.SSH_KEY }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            docker image pull anaxios/scrinium:latest
            docker container stop scrinium
            docker container rm scrinium
            docker container run -d --name scrinium \
            -l traefik.enable=true \
            -l traefik.http.middlewares.gzip.compress=true \
            -l traefik.http.routers.scrinium.rule=Host(`daedalist.net`) && PathPrefix(`/`) \
            -l traefik.http.routers.scrinium.entrypoints=http \
            -l traefik.http.routers.scrinium.service=scrinium \
            -l traefik.http.routers.scrinium.middlewares=gzip \
            -l traefik.http.services.scrinium.loadbalancer.server.port=3000 \
            --network=proxy \
            anaxios/scrinium
